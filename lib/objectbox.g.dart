// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again:
// With a Flutter package, run `flutter pub run build_runner build`.
// With a Dart package, run `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart';
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'settings.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <ModelEntity>[
  ModelEntity(
      id: const IdUid(1, 7007811920086755803),
      name: 'TransCodePreset',
      lastPropertyId: const IdUid(8, 978776425195800060),
      flags: 0,
      properties: <ModelProperty>[
        ModelProperty(
            id: const IdUid(1, 5863088771646158795),
            name: 'id',
            type: 6,
            flags: 1),
        ModelProperty(
            id: const IdUid(2, 7974244988260680700),
            name: 'name',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(4, 718407751114615983),
            name: 'useInputResolution',
            type: 1,
            flags: 0),
        ModelProperty(
            id: const IdUid(5, 3016759936234006850),
            name: 'useHevc',
            type: 1,
            flags: 0),
        ModelProperty(
            id: const IdUid(6, 3110242820525980398),
            name: 'width',
            type: 6,
            flags: 0),
        ModelProperty(
            id: const IdUid(7, 5690649391399706568),
            name: 'height',
            type: 6,
            flags: 0),
        ModelProperty(
            id: const IdUid(8, 978776425195800060),
            name: 'crf',
            type: 6,
            flags: 0)
      ],
      relations: <ModelRelation>[],
      backlinks: <ModelBacklink>[])
];

/// Open an ObjectBox store with the model declared in this file.
Future<Store> openStore(
        {String? directory,
        int? maxDBSizeInKB,
        int? fileMode,
        int? maxReaders,
        bool queriesCaseSensitiveDefault = true,
        String? macosApplicationGroup}) async =>
    Store(getObjectBoxModel(),
        directory: directory ?? (await defaultStoreDirectory()).path,
        maxDBSizeInKB: maxDBSizeInKB,
        fileMode: fileMode,
        maxReaders: maxReaders,
        queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
        macosApplicationGroup: macosApplicationGroup);

/// ObjectBox model definition, pass it to [Store] - Store(getObjectBoxModel())
ModelDefinition getObjectBoxModel() {
  final model = ModelInfo(
      entities: _entities,
      lastEntityId: const IdUid(1, 7007811920086755803),
      lastIndexId: const IdUid(0, 0),
      lastRelationId: const IdUid(0, 0),
      lastSequenceId: const IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [6818907781724797816],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, EntityDefinition>{
    TransCodePreset: EntityDefinition<TransCodePreset>(
        model: _entities[0],
        toOneRelations: (TransCodePreset object) => [],
        toManyRelations: (TransCodePreset object) => {},
        getId: (TransCodePreset object) => object.id,
        setId: (TransCodePreset object, int id) {
          object.id = id;
        },
        objectToFB: (TransCodePreset object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          fbb.startTable(9);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addBool(3, object.useInputResolution);
          fbb.addBool(4, object.useHevc);
          fbb.addInt64(5, object.width);
          fbb.addInt64(6, object.height);
          fbb.addInt64(7, object.crf);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);

          final object = TransCodePreset()
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..name = const fb.StringReader(asciiOptimization: true)
                .vTableGet(buffer, rootOffset, 6, '')
            ..useInputResolution =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 10, false)
            ..useHevc =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 12, false)
            ..width =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0)
            ..height =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0)
            ..crf = const fb.Int64Reader().vTableGet(buffer, rootOffset, 18, 0);

          return object;
        })
  };

  return ModelDefinition(model, bindings);
}

/// [TransCodePreset] entity fields to define ObjectBox queries.
class TransCodePreset_ {
  /// see [TransCodePreset.id]
  static final id =
      QueryIntegerProperty<TransCodePreset>(_entities[0].properties[0]);

  /// see [TransCodePreset.name]
  static final name =
      QueryStringProperty<TransCodePreset>(_entities[0].properties[1]);

  /// see [TransCodePreset.useInputResolution]
  static final useInputResolution =
      QueryBooleanProperty<TransCodePreset>(_entities[0].properties[2]);

  /// see [TransCodePreset.useHevc]
  static final useHevc =
      QueryBooleanProperty<TransCodePreset>(_entities[0].properties[3]);

  /// see [TransCodePreset.width]
  static final width =
      QueryIntegerProperty<TransCodePreset>(_entities[0].properties[4]);

  /// see [TransCodePreset.height]
  static final height =
      QueryIntegerProperty<TransCodePreset>(_entities[0].properties[5]);

  /// see [TransCodePreset.crf]
  static final crf =
      QueryIntegerProperty<TransCodePreset>(_entities[0].properties[6]);
}
